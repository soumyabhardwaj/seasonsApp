{"version":3,"sources":["seasonDisplay.js","Spinner.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","seasonDisplay","props","lat","month","season","Date","getMonth","className","spinner","message","defaultProps","App","state","errorMessage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","this","Spinner","renderContent","React","Component","ReactDom","render","document","querySelector"],"mappings":"+LAIMA,G,MAAc,CACpBC,OAAO,CACHC,KAAM,yBACNC,SAAS,OAGZC,OAAO,CACLF,KAAM,kCAENC,SAAS,eAoCGE,EAnBM,SAACC,GAClB,IAXaC,EAAKC,EAWZC,GAXOF,EAWYD,EAAMC,KAXbC,GAWkB,IAAIE,MAAOC,YAVtC,GAAKH,EAAO,EACdD,EAAI,EAAI,SAAW,SAGlBA,EAAM,EAAI,SAAW,UAKF,EAELP,EAAaS,GAA5BP,EAFoB,EAEpBA,KAAKC,EAFe,EAEfA,SAGZ,OACK,yBAAKS,UAAS,yBAAqBH,IACpC,uBAAGG,UAAS,4BAAwBT,EAAxB,WACZ,4BAAKD,GACL,uBAAGU,UAAS,6BAAwBT,EAAxB,UAAZ,OCrCFU,EAAQ,SAACP,GACd,OACC,yBAAKM,UAAU,oBACZ,yBAAKA,UAAU,sBACXN,EAAMQ,WAcfD,EAAQE,aAAa,CAEjBD,QAAQ,WAGGD,QClBTG,E,4MACFC,MAAQ,CAAEV,IAAK,KAAMW,aAAc,I,kEAEd,IAAD,OAElBC,OAAOC,UAAUC,YAAYC,oBAC3B,SAAAC,GAAQ,OAAI,EAAKC,SAAS,CAAEjB,IAAKgB,EAASE,OAAOC,cACjD,SAAAC,GAAG,OAAI,EAAKH,SAAS,CAAEN,aAAcS,EAAIb,e,sCAK3C,OAAIc,KAAKX,MAAMC,eAAiBU,KAAKX,MAAMV,IAClC,uCAAaqB,KAAKX,MAAMC,eAG5BU,KAAKX,MAAMC,cAAgBU,KAAKX,MAAMV,IAClC,kBAAC,EAAD,CAAeA,IAAKqB,KAAKX,MAAMV,MAGjC,kBAACsB,EAAD,CAASf,QAAQ,qC,+BAIxB,OAAO,yBAAKF,UAAU,cAAf,IAA8BgB,KAAKE,qB,GAxB9BC,IAAMC,WA4BtBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,W","file":"static/js/main.b8cb1fed.chunk.js","sourcesContent":["import \"./seasonDisplay.css\"\r\nimport React from 'react';\r\n\r\n\r\nconst seasonConfig ={\r\nsummer:{\r\n    text: \"Woah! It's hot outside\",\r\n    iconName:\"sun\"\r\n}\r\n\r\n,winter:{\r\n   text: \" Burrr ! it's cold outside man!\",\r\n\r\n   iconName:\"snowflake\"\r\n\r\n}\r\n\r\n\r\n}\r\n\r\nconst getSeason=(lat, month) =>{\r\n  if (month >2 && month <9){\r\n    return lat>0 ? 'summer' : 'winter';\r\n  } \r\n  else {\r\n     return lat > 0 ? 'winter' : 'summer';\r\n  }\r\n\r\n};\r\n\r\nconst seasonDisplay= (props) =>{\r\n    const season = getSeason(props.lat, new Date().getMonth());\r\n    const {text,iconName}=seasonConfig[season]\r\n\r\n    \r\n    return (\r\n         <div className={ `season-display ${season}`  }>\r\n        <i className ={`icon-left massive ${iconName} icon`}></i>\r\n        <h1>{text}</h1>\r\n        <i className={`icon-right massive ${iconName} icon`}> </i>\r\n        \r\n         </div>\r\n\r\n    );     \r\n\r\n\r\n\r\n};\r\n\r\nexport default seasonDisplay;","import React from \"react\";\r\n\r\nconst spinner=(props)=>{\r\n return (\r\n  <div className=\"ui active dimmer\">\r\n     <div className=\"ui big text loader\">\r\n        {props.message}\r\n     </div>\r\n\r\n\r\n  </div>\r\n\r\n\r\n\r\n\r\n );\r\n\r\n\r\n};\r\n\r\nspinner.defaultProps={\r\n\r\n    message:\"loading\"\r\n}\r\n\r\nexport default spinner;\r\n\r\n","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport SeasonDisplay from './seasonDisplay';\r\nimport Loader from './Spinner';\r\nimport Spinner from \"./Spinner\";\r\n\r\n\r\nclass App extends React.Component {\r\n    state = { lat: null, errorMessage: '' };\r\n  \r\n    componentDidMount() {\r\n    \r\n      window.navigator.geolocation.getCurrentPosition(\r\n        position => this.setState({ lat: position.coords.latitude }),\r\n        err => this.setState({ errorMessage: err.message })\r\n      );\r\n    }\r\n  \r\n    renderContent() {\r\n      if (this.state.errorMessage && !this.state.lat) {\r\n        return <div>Error: {this.state.errorMessage}</div>;\r\n      }\r\n  \r\n      if (!this.state.errorMessage && this.state.lat) {\r\n        return <SeasonDisplay lat={this.state.lat} />;\r\n      }\r\n  \r\n      return <Spinner message=\"Please accept location request\" />;\r\n    }\r\n  \r\n    render() {\r\n      return <div className=\"border red\"> {this.renderContent()}</div>;\r\n    }\r\n  };\r\n  \r\n  ReactDom.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}